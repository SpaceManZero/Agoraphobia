@model LexiconLMS.Models.Activity

@{
    ViewBag.Title = "Create";
	int selectedCourseId = 1;
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Activity</h4>
        
		<div class="form-group">
			@Html.LabelFor(m => m.Module, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(x => selectedCourseId, new SelectList(ViewBag.CourseBaseInfo, "Id", "Name"), new { @class = "form-control" })
			</div>
		</div>
		
		<div class="form-group">
			@Html.LabelFor(model => model.Module, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@{
					IEnumerable<LexiconLMS.Controllers.ModuleCoreInfo> modules = ViewBag.ModuleCoreInfo;
					SelectList list = new SelectList(modules.Select(m => m.CourseId == selectedCourseId), "Id", "Name");
				}
				@Html.DropDownListFor(model => model.ModuleId, list, new { @class = "form-control" })
			</div>
		</div>
		
		<div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(m => m.Type, new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(a => a.Type, new SelectList(ViewBag.ActivityType, "Id", "Type"), new { @class = "form-control" })
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
